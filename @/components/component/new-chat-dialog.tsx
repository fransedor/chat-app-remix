/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/HRMHPT2hJS6
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar";
import { AddButton } from "./add-button";
import { DialogProps } from "@radix-ui/react-dialog";
import { useFetcher } from "@remix-run/react";
import { loader } from "~/routes/users";

interface NewChatDialogProps extends DialogProps {}
export function NewChatDialog(props: NewChatDialogProps) {
  const fetcher = useFetcher<typeof loader>();

  const onOpenChangeHandler = (open: boolean) => {
    if (open) {
      fetcher.load("/users");
    }
  };

  const isLoading = fetcher.state === "loading";
  const userList = fetcher.data && fetcher.data.data;
  const isError = fetcher.data && fetcher.data.error;

  return (
    <Dialog {...props} onOpenChange={onOpenChangeHandler}>
      <DialogTrigger>
        <AddButton />
      </DialogTrigger>
      <DialogContent className="sm:max-w-[600px]">
        <DialogHeader>
          <DialogTitle>New Chat</DialogTitle>
          <div />
        </DialogHeader>
        <div className="relative flex-1">
          <div className="absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground" />
          <Input
            type="search"
            placeholder="Search users..."
            className="w-full rounded-lg bg-background pl-8"
          />
        </div>

        <div className="grid gap-4 max-h-[400px] overflow-auto">
          {isError && <p className="text-destructive">Error when getting user list</p>}
          {userList &&
            userList.map((user) => (
              <div className="grid grid-cols-[auto_1fr] items-center gap-4" key={user.id}>
                <Avatar>
                  <AvatarImage src="/placeholder-user.jpg" />
                  <AvatarFallback>JD</AvatarFallback>
                </Avatar>
                <div className="grid gap-1">
                  <div className="font-medium">{user.username}</div>
                </div>
              </div>
            ))}
        </div>
        {isLoading && <p>loading...</p>}
      </DialogContent>
    </Dialog>
  );
}
